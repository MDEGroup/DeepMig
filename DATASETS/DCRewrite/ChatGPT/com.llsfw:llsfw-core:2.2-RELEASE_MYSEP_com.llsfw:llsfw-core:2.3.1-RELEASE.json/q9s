You are a Java code assistant. Given this Java class: 

package com.llsfw.core.common;

import java.util.Map;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class SystemParamDef {
  private static final Logger LOG = LogManager.getLogger();
  
  private Map<String, String> data;
  
  public Map<String, String> getData() {
    return this.data;
  }
  
  public void setData(Map<String, String> data) {
    this.data = data;
    LOG.debug("data:" + this.data);
  }
}



Can you show me just the required modification to perform the migration from log4j to slf4j library please?

To migrate the `SystemParamDef` class from Log4j to SLF4J, you need to modify the import statements and update the logger instantiation as follows:

### Modifications Required

**Before (using Log4j):**
```java
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

private static final Logger LOG = LogManager.getLogger();
```

**After (using SLF4J):**
```java
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

private static final Logger LOG = LoggerFactory.getLogger(SystemParamDef.class);
```

This change involves:
1. Replacing the Log4j import statements with SLF4J imports.
2. Using `LoggerFactory.getLogger()` from SLF4J instead of `LogManager.getLogger()` from Log4j.
