You are a Java code assistant. Given this Java class: 

package com.llsfw.core.listener;

import javax.servlet.ServletContextAttributeEvent;
import javax.servlet.ServletContextAttributeListener;
import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.servlet.ServletRequestAttributeEvent;
import javax.servlet.ServletRequestAttributeListener;
import javax.servlet.ServletRequestEvent;
import javax.servlet.ServletRequestListener;
import javax.servlet.http.HttpSessionAttributeListener;
import javax.servlet.http.HttpSessionBindingEvent;
import javax.servlet.http.HttpSessionEvent;
import javax.servlet.http.HttpSessionListener;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.web.context.support.WebApplicationContextUtils;

public class GlobalListener implements ServletContextListener, ServletContextAttributeListener, HttpSessionListener, HttpSessionAttributeListener, ServletRequestListener, ServletRequestAttributeListener {
  private static final Logger LOG = LogManager.getLogger();
  
  private IGlobalListenerOp igo;
  
  public void contextInitialized(ServletContextEvent sce) {
    this.igo = (IGlobalListenerOp)WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext()).getBean("globalListener", IGlobalListenerOp.class);
    LOG.info("GlobalListenerOp+ this.igo);
    if (this.igo != null)
      this.igo.contextInitialized(sce); 
  }
  
  public void contextDestroyed(ServletContextEvent sce) {
    if (this.igo != null)
      this.igo.contextDestroyed(sce); 
  }
  
  public void attributeAdded(ServletRequestAttributeEvent srae) {
    if (this.igo != null)
      this.igo.attributeAdded(srae); 
  }
  
  public void attributeRemoved(ServletRequestAttributeEvent srae) {
    if (this.igo != null)
      this.igo.attributeRemoved(srae); 
  }
  
  public void attributeReplaced(ServletRequestAttributeEvent srae) {
    if (this.igo != null)
      this.igo.attributeReplaced(srae); 
  }
  
  public void requestDestroyed(ServletRequestEvent sre) {
    if (this.igo != null)
      this.igo.requestDestroyed(sre); 
  }
  
  public void requestInitialized(ServletRequestEvent sre) {
    if (this.igo != null)
      this.igo.requestInitialized(sre); 
  }
  
  public void attributeAdded(HttpSessionBindingEvent se) {
    if (this.igo != null)
      this.igo.attributeAdded(se); 
  }
  
  public void attributeRemoved(HttpSessionBindingEvent se) {
    if (this.igo != null)
      this.igo.attributeRemoved(se); 
  }
  
  public void attributeReplaced(HttpSessionBindingEvent se) {
    if (this.igo != null)
      this.igo.attributeReplaced(se); 
  }
  
  public void sessionCreated(HttpSessionEvent se) {
    if (this.igo != null)
      this.igo.sessionCreated(se); 
  }
  
  public void sessionDestroyed(HttpSessionEvent se) {
    if (this.igo != null)
      this.igo.sessionDestroyed(se); 
  }
  
  public void attributeAdded(ServletContextAttributeEvent scae) {
    if (this.igo != null)
      this.igo.attributeAdded(scae); 
  }
  
  public void attributeRemoved(ServletContextAttributeEvent scae) {
    if (this.igo != null)
      this.igo.attributeRemoved(scae); 
  }
  
  public void attributeReplaced(ServletContextAttributeEvent scae) {
    if (this.igo != null)
      this.igo.attributeReplaced(scae); 
  }
}


Can you show me just the required modification to perform the migration from log4j to slf4j library please?

To migrate the `GlobalListener` class from using Log4j to SLF4J, you need to make the following modifications:

1. **Change the Logger import:**
   Replace `org.apache.logging.log4j.LogManager` and `org.apache.logging.log4j.Logger` with `org.slf4j.Logger` and `org.slf4j.LoggerFactory`.

2. **Change the Logger initialization:**
   Replace `LogManager.getLogger()` with `LoggerFactory.getLogger(GlobalListener.class)`.

### Modifications

**Before (Log4j)**
```java
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

private static final Logger LOG = LogManager.getLogger();
```

**After (SLF4J)**
```java
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

private static final Logger LOG = LoggerFactory.getLogger(GlobalListener.class);
```

These changes update the logging mechanism to use SLF4J, which provides a simple abstraction to various logging frameworks like Log4j, making it easier to switch between them without major code changes.
