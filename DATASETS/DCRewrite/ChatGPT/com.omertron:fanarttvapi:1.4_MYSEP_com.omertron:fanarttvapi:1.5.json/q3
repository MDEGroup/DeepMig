To migrate the `FanartTvArtwork` class from using Log4j to SLF4J, you will need to change the import statements and update the logger initialization. Here’s how you can do that:

### 1. Change Import Statements
Replace the Log4j import statement with the appropriate SLF4J import:

```java
// Remove this
import org.apache.log4j.Logger;

// Add this
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
```

### 2. Modify Logger Initialization
Update the logger instantiation to use SLF4J’s LoggerFactory:

Replace:
```java
private static final Logger logger = Logger.getLogger(FanartTvArtwork.class);
```

With:
```java
private static final Logger logger = LoggerFactory.getLogger(FanartTvArtwork.class);
```

### 3. Update Logging Usage
Ensure that all logging statements are using parameterized messages, which is a best practice with SLF4J to avoid unnecessary string concatenation if the logging level is not enabled. For example:

Replace:
```java
StringBuilder sb = new StringBuilder();
sb.append("Unknown property: '").append(key);
sb.append("' value: '").append(value).append("'");
logger.warn(sb.toString());
```

With:
```java
logger.warn("Unknown property: '{}' value: '{}'", key, value);
```

### Example of Updated Class Using SLF4J
Here's how the class might look after applying the changes:

```java
package com.omertron.fanarttvapi.model;

import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.io.Serializable;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class FanartTvArtwork implements Serializable {
  private static final Logger logger = LoggerFactory.getLogger(FanartTvArtwork.class);
  private static final long serialVersionUID = 1L;
  private FTArtworkType type;
  
  @JsonProperty("id")
  private int id;
  
  @JsonProperty("url")
  private String url;
  
  @JsonProperty("lang")
  private String language;
  
  @JsonProperty("likes")
  private int likes;
  
  private int season;
  
  @JsonProperty("disc")
  private int disc;
  
  @JsonProperty("disc_type")
  private String discType;
  
  // Constructor and getter/setter methods...
  
  @JsonAnySetter
  public void handleUnknown(String key, Object value) {
    logger.warn("Unknown property: '{}' value: '{}'", key, value);
  }

  public String toString() {
    return String.format("FanartTvArtwork[type=%s, id=%d, url='%s', lang='%s', likes=%d, season=%d, disc=%d, discType='%s']", 
                         type, id, url, language, likes, season, disc, discType);
  }
}
```

This migration will make the `FanartTvArtwork` class use SLF4J for logging, which is advantageous for maintaining consistency in logging across different classes and packages, and for performance benefits due to parameterized logging. Ensure that similar changes are applied throughout your project for consistency and to leverage the full benefits of SLF4J.